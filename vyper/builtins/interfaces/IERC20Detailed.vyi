#NOTE: interface uses `String[1]` where 1 is the lower bound of the string returned by the function.
#    For end-users this means they can't use `implements: ERC20Detailed` unless their implementation
#    uses a value n >= 1. Regardless this is fine as one can't do String[0] where n == 0.

@view
def name() -> String[1]:
    ...

@view
def symbol() -> String[1]:
    ...

@view
def decimals() -> uint8:
    ...

from ethereum.ercs import IERC20

implements: IERC20

# Events
event Transfer:
    sender: indexed(address)
    receiver: indexed(address)
    value: uint256

event Approval:
    owner: indexed(address)
    spender: indexed(address)
    value: uint256

# Functions
@view
@external
def totalSupply() -> uint256:
    ...

@view
@external
def balanceOf(_owner: address) -> uint256:
    ...

@view
@external
def allowance(_owner: address, _spender: address) -> uint256:
    ...

@external
def transfer(_to: address, _value: uint256) -> bool:
    ...

@external
def transferFrom(_from: address, _to: address, _value: uint256) -> bool:
    ...

@external
def approve(_spender: address, _value: uint256) -> bool:
    ...
